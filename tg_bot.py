from aiogram import Bot, Dispatcher, executor, types
from config import token_API, chanel_ID
from aiogram.dispatcher.filters import Text

from keyboards import kb
from main import check_inf_update
from stickers import stickers

import json
import random
import asyncio

bot = Bot(token=token_API)
dp = Dispatcher(bot)



async def on_startup(_):
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')


@dp.message_handler(commands=['start'])
async def start_commands(message: types.Message) -> None:
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,
                           text=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, <b>{message.from_user.first_name}</b>!\n\n'
                                f'–¢—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ —Å–∞–º—ã—Ö —Å–≤–µ–∂–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö —Å–æ —Å–∫–∏–¥–∫–æ–π? –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ —ç—Ç–æ–º!\n\n'
                                f'–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç –º—ã –±—É–¥–µ–º –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö. üòä',
                           reply_markup=kb,
                           parse_mode='HTML')


@dp.message_handler(Text(equals='–ñ–º–∏ —Å—é–¥–∞!', ignore_case=True))
async def new_products_command(message: types.Message) -> None:
    await message.delete()
    fresh_inf_dict = check_inf_update()
    if len(fresh_inf_dict) >= 1:
        await message.answer('–ù–∞—à–ª–∏! –°–∫–æ—Ä–æ –º—ã —Ç–µ–±–µ –∏—Ö –ø–æ–∫–∞–∂–µ–º!')
        article_id, inf = random.choice(list(fresh_inf_dict.items()))
        await asyncio.sleep(random.randint(60, 180))
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=inf['img_inf'],
                             caption=f'<b>{random.choice(stickers)} {inf["name_inf"]}</b>\n\n'
                                     f'{inf["dis_prices_inf"]} | <s>{inf["prices_inf"]}</s> | {inf["discounts_inf"]}\n\n'
                                     f'<a href="{inf["link"]}">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä! üëà</a>\n\n\n'
                                     f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å –æ —Å–≤–µ–∂–∞–π—à–∏—Ö –Ω–æ–≤–∏–Ω–∫–∞—Ö —Ä–∞–Ω—å—à–µ –≤—Å–µ—Ö - —Ç–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏ –Ω–∞—à–µ–º—É <a href="https://t.me/Shein_sale_bot">Telegram-–±–æ—Ç—É</a>!',
                             parse_mode='HTML')
    else:
        await message.answer('–ü—Ä–æ—Å—Ç–∏, –Ω–æ –ø–æ–∫–∞ –Ω–µ—Ç —Å–≤–µ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π...')


@dp.message_handler(commands=['startinchanel'])
async def start_in_chanel_commands(message: types.Message) -> None:
    with open('inf_dict.json', 'r') as file:
        inf_dict = json.load(file)

        while True:
            article_id, inf = random.choice(list(inf_dict.items()))
            await asyncio.sleep(random.randint(1200, 1800))
            await bot.send_photo(chat_id=chanel_ID,
                                 photo=inf['img_inf'],
                                 caption=f'<b>{random.choice(stickers)} {inf["name_inf"]}</b>\n\n'
                                         f'{inf["dis_prices_inf"]} | <s>{inf["prices_inf"]}</s> | {inf["discounts_inf"]}\n\n'
                                         f'<a href="{inf["link"]}">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä! üëà</a>\n\n\n'
                                         f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å –æ —Å–≤–µ–∂–∞–π—à–∏—Ö –Ω–æ–≤–∏–Ω–∫–∞—Ö —Ä–∞–Ω—å—à–µ –≤—Å–µ—Ö - —Ç–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏ –Ω–∞—à–µ–º—É <a href="https://t.me/Shein_sale_bot">Telegram-–±–æ—Ç—É</a>!',
                                 parse_mode='HTML')



if __name__ == '__main__':
    executor.start_polling(dispatcher=dp,
                           on_startup=on_startup)